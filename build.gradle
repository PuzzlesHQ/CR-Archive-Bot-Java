plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

application {
    mainClass = 'dev.puzzleshq.CRArchiveBot.Main'
}

// Repositories
repositories {
    mavenCentral()
    maven { url "https://repo.jenkins-ci.org/public/" }
}

// Custom configurations (define early!)
configurations {
    mockitoAgent
}

// Dependencies
dependencies {

    implementation "io.jsonwebtoken:jjwt-api:$jjwt_version"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwt_version"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jjwt_version"

    implementation "org.kohsuke:github-api:$github_API_Version"
    implementation "org.hjson:hjson:$hjson_version"

    implementation("org.apache.logging.log4j:log4j-api:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-core:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-slf4j2-impl:$log4jVersion")

    testImplementation platform("org.junit:junit-bom:$junit_jupiter_version")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    testImplementation "org.mockito:mockito-core:$mockito_version"
    mockitoAgent("org.mockito:mockito-core:$mockito_version") {
        transitive = false
    }

    implementation "com.github.villadora:semver:$semver_version"

    implementation("net.dv8tion:JDA:$JDA_version")
    compileOnly "org.jetbrains:annotations:$jetbrains_annotations"
}

// Ensure fat JAR is built
tasks.build {
    dependsOn shadowJar
}

// Test config
test {
    useJUnitPlatform()
    workingDir = file("test/")
    doFirst {
        workingDir.mkdirs()
    }
    jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
}

// Runtime working dir
tasks.withType(JavaExec).configureEach {
    workingDir = file("run/")
    doFirst {
        workingDir.mkdirs()
    }
}

// JAR manifest fix
jar {
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
}
